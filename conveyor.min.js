(function(){"use strict";function toArray(value){return Array.prototype.slice.call(value)}function isFunction(x){return Object.prototype.toString.call(x)==="[object Function]"}function isUndefined(x){return x===void 0}function Conveyor(opts){var ACTIONS=[];var BUFFER=[];var OPTIONS=opts||{};var ACTION_TTL=OPTIONS.action_interval||2;var BUFFER_TTL=OPTIONS.buffer_interval||1;var PROMISE=null;var SELF=this;function handleError(msg){if(isFunction(OPTIONS.error)){OPTIONS.error.call()}else{throw msg}}this.do=function(){return this.doAll(arguments)};this.doAll=function(fns){var i,fn;for(i=0;i<fns.length;i++){fn=fns[i];if(!isFunction(fn)){throw new Error("An action must be a function")}if(ACTIONS.length>5){BUFFER.push(fn)}else{ACTIONS.push(fn)}}return this};this.isComplete=function(){return ACTIONS.length===0&&BUFFER.length===0};this.then=function(resolve,reject){if(PROMISE==null){return new Promise(function(resolve1,reject){SELF.do(resolve,resolve1)})}else{return PROMISE.then(resolve,reject)}};function performAction(action){if(PROMISE==null){var res=action.call(SELF);if(!isUndefined(res)){return Promise.resolve(res)}return null}else{return PROMISE.then(function(){return action.apply(SELF,removeLastArgumentIfUndefined(arguments))},handleError)}}function removeLastArgumentIfUndefined(args){var args_=toArray(args);if(isUndefined(args_[args_.length-1])){return args_.slice(0,args_.length-1)}return args_}setInterval(function(){if(ACTIONS.length===0&&BUFFER.length!==0){ACTIONS.push(BUFFER.shift())}},BUFFER_TTL);setInterval(function(){while(ACTIONS.length!==0){PROMISE=performAction(ACTIONS.shift())}},ACTION_TTL)}Conveyor.prototype=Object.create(null);Conveyor.prototype.log=function(){return this.do(conveyor.say.apply(conveyor,arguments))};function isConveyor(x){return x instanceof Conveyor}function conveyor(opts){return new Conveyor(opts)}conveyor.asAction=function(fn){var args=Array.prototype.slice.call(arguments,1);return function(){return fn.apply(this,args)}};conveyor.none=function(){};conveyor.tap=function(f){return function(x){f(x);return conveyor.return(x)}};conveyor.always=function(x){return function(){return conveyor.return(x)}};conveyor.ident=function(){return function(x){return conveyor.return(x)}};conveyor.log=function(){return function(x){console.log.apply(console,arguments);return conveyor.return(x)}};conveyor.say=function(msg){var args=arguments;return function(x){console.log.apply(console,args);return conveyor.return(x)}};conveyor.sleep=function(ms){return function(){var args=arguments;return new Promise(function(resolve){var self=this;setTimeout(function(){resolve.apply(self,args)},ms)})}};conveyor.throw=function(e){return function(){throw e}};conveyor.return=Promise.resolve.bind(Promise);function resolveThenable(thenable,action,self){return Promise.resolve(thenable).then(function(){return action.apply(self,arguments)})}function collectPromiseAction(promise,ret,action,self){return promise.then(function(){return resolveThenable(ret,action,self)})}conveyor.doSequentially=function(actions){var promise,i,action,ret,args,self=this;for(i=0;i<actions.length;i++){action=actions[i];if(!isFunction(action))throw new Error("Actions should be functions");if(ret==null){ret=action.apply(self,arguments)}else if(isFunction(ret.then)&&promise==null){promise=resolveThenable(ret,action,self)}else if(isFunction(ret.then)){promise=collectPromiseAction(promise,ret,action,self)}else{ret=action.apply(self,[ret])}}return promise||Promise.resolve(ret)};conveyor.sequence=function(){var actions=arguments;return function(){return conveyor.doSequentially(actions)}};conveyor.when=function(predicate){var actions=Array.prototype.slice.call(arguments,1);return function(x){var y=predicate(x);if(y!=null&&y!=false){return conveyor.doSequentially(actions)}return conveyor.return(x)}};conveyor.unless=function(predicate){var actions=Array.prototype.slice.call(arguments,1);return function(x){var y=predicate(x);if(y==null||y==false){return conveyor.doSequentially(actions)}return conveyor.return(x)}};this.conveyor=conveyor;conveyor.Conveyor=Conveyor;if(typeof module!=="undefined"){module.exports=conveyor}}).call(this);
