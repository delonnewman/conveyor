(function(){"use strict";function toArray(value){return Array.prototype.slice.call(value)}function isFunction(x){return Object.prototype.toString.call(x)==="[object Function]"}function isUndefined(x){return x===void 0}function Conveyor(opts){var ACTIONS=[];var BUFFER=[];var OPTIONS=opts||{};var ACTION_TTL=OPTIONS.action_interval||2;var BUFFER_TTL=OPTIONS.buffer_interval||1;var PROMISE=null;var SELF=this;function handleError(msg){if(isFunction(OPTIONS.error)){OPTIONS.error.call()}else{throw msg}}this.do=function(){this.doAll(arguments)};this.doAll=function(fns){var i,fn;for(i=0;i<fns.length;i++){fn=fns[i];if(!isFunction(fn))throw new Error("An action must be a function");if(ACTIONS.length>5){BUFFER.push(fn)}else{ACTIONS.push(fn)}}return this};this.isComplete=function(){return ACTIONS.length===0&&BUFFER.length===0};function performAction(action){if(PROMISE==null){var res=action.call(SELF);if(!isUndefined(res)){return Promise.resolve(res)}return null}else{return PROMISE.then(function(){return action.apply(SELF,removeLastArgumentIfUndefined(arguments))},handleError)}}function removeLastArgumentIfUndefined(args){var args_=toArray(args);if(isUndefined(args_[args_.length-1])){return args_.slice(0,args_.length-1)}return args_}setInterval(function(){if(ACTIONS.length===0&&BUFFER.length!==0){ACTIONS.push(BUFFER.shift())}},BUFFER_TTL);setInterval(function(){while(ACTIONS.length!==0){PROMISE=performAction(ACTIONS.shift())}},ACTION_TTL)}function isConveyor(x){return x instanceof Conveyor}function conveyor(opts){return new Conveyor(opts)}conveyor.asAction=function(fn){var args=Array.prototype.slice.call(arguments,1);return function(){return fn.apply(this,args)}};conveyor.tap=function(f){return function(x){f(x);return x}};conveyor.log=conveyor.tap(console.log.bind(console));conveyor.doNothing=function(){};conveyor.doSimultaneously=function(){var actions=arguments;return function(){var i,action;for(i=0;i<actions.length;i++){action=actions[i];if(!_.isFunction(action))throw new Error("Actions should be functions");action.apply(this,arguments)}}};function resolveThenable(thenable,action,self){return Promise.resolve(thenable).then(function(){return action.apply(self,arguments)})}function collectPromiseAction(promise,ret,action,self){return promise.then(function(){return resolveThenable(ret,action,self)})}conveyor.doSequentially=function(){var actions=arguments;return function(){var promise,i,action,ret,args,self=this;for(i=0;i<actions.length;i++){action=actions[i];if(!_.isFunction(action))throw new Error("Actions should be functions");if(ret==null){ret=action.apply(self,arguments)}else if(_.isFunction(ret.then)&&promise==null){promise=resolveThenable(ret,action,self)}else if(_.isFunction(ret.then)){promise=collectPromiseAction(promise,ret,action,self)}else{ret=action.apply(self,[ret])}}return promise||Promise.resolve(ret)}};this.conveyor=conveyor;if(!isUndefined(module.exports)){module.exports=conveyor}}).call(this);
